{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.js","App.js","index.js","components/Footer/Footer.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","box","href","icon","faFacebook","faInstagram","faGithub","faLinkedinIn","p1","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02303c55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__9whEP\",\"card\":\"Cards_card__3A4-J\",\"infected\":\"Cards_infected__15uG0\",\"recovered\":\"Cards_recovered__3Abim\",\"deaths\":\"Cards_deaths__2xqLZ\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nfunction Cards({ data: { confirmed,recovered,deaths,lastUpdate}}){\r\n    if(!confirmed){\r\n        return 'Loading..'\r\n    };\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {confirmed.value} duration = {2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {recovered.value} duration = {2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {deaths.value} duration = {2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const { data: {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n\r\n        return {confirmed,recovered,deaths,lastUpdate}\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n    \r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name)\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n    }\r\n}","import React, {useState, useEffect}from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line,Bar} from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length?(\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }]\r\n            }}\r\n        />):null\r\n\r\n    )\r\n    const barChart = (\r\n        confirmed?(\r\n            <Bar\r\n                data ={{\r\n                    labels: ['Infected','Recovered','Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor:[\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)',\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display:false},\r\n                    title: {display:true,text:`Current state in ${country}`}\r\n                }}\r\n            />\r\n        ):null\r\n    )\r\n    \r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart : lineChart}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chart;","import React, { useState,useEffect } from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries())\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react';\r\nimport styles from './Footer.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFacebook,faInstagram,faGithub,faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div className={styles.box}>\r\n            <h1>STAY HOME.</h1>\r\n            <h2>STAY SAFE.</h2>\r\n            <ul>\r\n                <a href=\"https://www.facebook.com/jeswanth.2001\"><FontAwesomeIcon icon={faFacebook} /></a>\r\n                <a href=\"https://www.instagram.com/jeswanthv_06/\"><FontAwesomeIcon icon={faInstagram} /></a>\r\n                <a href=\"https://github.com/jeswanthv\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                <a href=\"https://www.linkedin.com/in/jeswanth-vadlamudi-a53364187/\"><FontAwesomeIcon icon={faLinkedinIn} /></a>\r\n            </ul>\r\n            <p>Created by:Jeswanth.v</p>\r\n            <p className={styles.p1}>Motivation is consistency.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker, Footer } from './components';\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api'\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country:'',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData})\r\n        \r\n    }\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n        this.setState({data: fetchedData, country: country})\r\n    }\r\n\r\n    render(){\r\n        const {data,country} = this.state\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt='COVID-19'/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Footer_box__3k-ib\",\"p1\":\"Footer_p1__56LRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1JipG\",\"image\":\"App_image__1-pXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__dvrHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__fw8Sm\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}